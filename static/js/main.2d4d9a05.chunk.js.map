{"version":3,"sources":["utils/pages.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["array","Array","from","length","_","index","Pagination","perPage","currentPage","items","onPageChange","pageChanger","page","lastItemOnPage","firstItemOnPage","className","href","onClick","map","cn","active","slice","item","App","useState","selectedPage","setSelectedPage","selectedOption","setSelectedOption","pageChangeHandler","option","Math","min","id","onChange","e","parseInt","target","value","opt","htmlFor","total","ReactDOM","render","document","getElementById"],"mappings":"2MAEeA,EAFDC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,K,OCWlDC,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,aAGMC,EAAc,SAACC,GACnBF,EAAaE,IAGTC,EAAiBL,EAAcD,EAC/BO,EAAkBD,EAAiBN,EAEzC,OACE,qCACE,qBAAIQ,UAAU,aAAd,UAEE,oBAAIA,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMN,EAAYH,EAAc,IAL3C,oBAUDR,EAAMkB,KAAI,SAACN,GAAD,OACT,oBAAIG,UAAWI,IAAG,YAAa,CAAEC,OAAQR,IAASJ,IAAlD,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAI,WAAMJ,GACVK,QAAS,kBAAMP,EAAaE,IAJ9B,SAMGA,SAIP,oBAAIG,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMN,EAAYH,EAAc,IAL3C,uBAWJ,6BACGC,EAAMY,MAAMP,EAAiBD,GAAgBK,KAAI,SAACI,GAAD,OAChD,oBAAI,UAAQ,OAAZ,SAAoBA,aC5DjBC,EAAgB,WAC3B,IACA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMnB,EAAQR,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,KAGzDQ,EAAiBY,EAAeE,EAChCb,EAAkBD,EAAiBc,EAEnCE,EAAoB,SAACjB,EAAckB,GACvCJ,EAAgBd,GAChBgB,EAAkBE,IAGpB,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWU,EADX,mBACkCX,EAAkB,EADpD,cAC2DiB,KAAKC,IAAInB,EAAgBJ,EAAMN,QAD1F,eACwGM,EAAMN,OAD9G,OAIA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,SAAU,SAACC,GAAD,OAAON,EAAkBJ,EACjCW,SAASD,EAAEE,OAAOC,MAAO,MAL7B,SApBQ,CAAC,EAAG,EAAG,GAAI,IA2BRpB,KAAI,SAACqB,GAAD,OACX,wBACED,MAAOC,EACPtB,QAAS,kBAAMY,EAAkBJ,EAAcE,IAFjD,SAIGY,WAOT,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACE0B,MAjDQ,GAkDRlC,QAASoB,EACTnB,YAAaiB,EACbhB,MAAOA,EACPC,aAAcgB,QCzDtBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2d4d9a05.chunk.js","sourcesContent":["const array = Array.from({ length: 10 }, (_, index) => index + 1);\n\nexport default array;\n","import cn from 'classnames';\nimport array from '../../utils/pages';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  items: number[];\n  onPageChange: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  currentPage,\n  items,\n  onPageChange,\n\n}) => {\n  const pageChanger = (page: number) => {\n    onPageChange(page);\n  };\n\n  const lastItemOnPage = currentPage * perPage;\n  const firstItemOnPage = lastItemOnPage - perPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n\n        <li className=\"page-item\">\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => pageChanger(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {array.map((page) => (\n          <li className={cn('page-item', { active: page === currentPage })}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className=\"page-item\">\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => pageChanger(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.slice(firstItemOnPage, lastItemOnPage).map((item) => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [selectedOption, setSelectedOption] = useState(3);\n\n  const items = Array.from({ length: 42 }, (_, index) => index + 1);\n  const options = [3, 5, 10, 15];\n\n  const lastItemOnPage = selectedPage * selectedOption;\n  const firstItemOnPage = lastItemOnPage - selectedOption;\n\n  const pageChangeHandler = (page: number, option: number) => {\n    setSelectedPage(page);\n    setSelectedOption(option);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItemOnPage + 1} - ${Math.min(lastItemOnPage, items.length)} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => pageChangeHandler(selectedPage,\n              parseInt(e.target.value, 10))}\n          >\n            {options.map((opt) => (\n              <option\n                value={opt}\n                onClick={() => pageChangeHandler(selectedPage, selectedOption)}\n              >\n                {opt}\n              </option>\n            ))}\n\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={selectedOption}\n        currentPage={selectedPage}\n        items={items}\n        onPageChange={setSelectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}