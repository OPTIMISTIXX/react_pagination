{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","items","onPageChange","pageChanger","page","array","Array","from","length","Math","ceil","_","index","lastItemOnPage","firstItemOnPage","className","cn","disabled","href","onClick","map","active","slice","item","App","useState","selectedPage","setSelectedPage","selectedOption","setSelectedOption","min","id","value","onChange","e","option","pageChangeHandler","parseInt","target","opt","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,aAGMC,EAAc,SAACC,GACnBF,EAAaE,IAGTC,EAAQC,MAAMC,KAAK,CAAEC,OAAQC,KAAKC,KAAKZ,EAAQC,KACnD,SAACY,EAAGC,GAAJ,OAAcA,EAAQ,KAElBC,EAAiBb,EAAcD,EAC/Be,EAAkBD,EAAiBd,EAEzC,OACE,qCACE,qBAAIgB,UAAU,aAAd,UAEE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUjB,EAAcD,GAAWA,IADvC,SAGE,mBACE,UAAQ,WACRgB,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMhB,EAAYH,EAAc,IAL3C,oBAUDK,EAAMe,KAAI,SAAChB,GAAD,OACT,oBAAIW,UAAWC,IAAG,YAAa,CAAEK,OAAQjB,IAASJ,IAAlD,SACE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAI,WAAMd,GACVe,QAAS,kBAAMjB,EAAaE,IAJ9B,SAMGA,SAIP,oBAAIW,UAAWC,IAAG,YAChB,CAAEC,SAAUjB,EAAcD,GAAWD,IADvC,SAGE,mBACE,UAAQ,WACRiB,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMhB,EAAYH,EAAc,IAL3C,uBAWJ,6BACGC,EAAMqB,MAAMR,EAAiBD,GAAgBO,KAAI,SAACG,GAAD,OAChD,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCpEJC,EAAgB,WAC3B,IACA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACM5B,EAAQK,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACG,EAAGC,GAAJ,OAAcA,EAAQ,KAGzDC,EAAiBa,EAAeE,EAChCd,EAAkBD,EAAiBe,EAczC,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWW,EADX,mBACkCjB,KAAKqB,IAAIhB,EAAkB,EA1BnD,IAyBV,cAC4EL,KAAKqB,IAAIjB,EA1B3E,IAyBV,eACkHZ,EAAMO,OADxH,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAOJ,EACPK,SAAU,SAACC,IA3BK,SAAC9B,EAAc+B,GACvC,GAAI/B,EAAO+B,EAASlC,EAAMO,OAIxB,OAHAmB,EAAgB,QAChBE,EAAkBM,GAKpBR,EAAgBvB,GAChByB,EAAkBM,GAmBRC,CAAkBV,EAAcW,SAASH,EAAEI,OAAON,MAAO,MAN7D,SA3BQ,CAAC,EAAG,EAAG,GAAI,IAoCRZ,KAAI,SAACmB,GAAD,OACX,iCAGGA,GAFIA,UASb,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEjB,MAxDQ,GAyDRC,QAAS6B,EACT5B,YAAa0B,EACbzB,MAAOA,EACPC,aAAcyB,QChEtBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9108e29d.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  items: number[];\n  onPageChange: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  items,\n  onPageChange,\n\n}) => {\n  const pageChanger = (page: number) => {\n    onPageChange(page);\n  };\n\n  const array = Array.from({ length: Math.ceil(total / perPage) },\n    (_, index) => index + 1);\n\n  const lastItemOnPage = currentPage * perPage;\n  const firstItemOnPage = lastItemOnPage - perPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n\n        <li className={cn('page-item',\n          { disabled: currentPage * perPage <= perPage })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => pageChanger(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {array.map((page) => (\n          <li className={cn('page-item', { active: page === currentPage })}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: currentPage * perPage >= total })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => pageChanger(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.slice(firstItemOnPage, lastItemOnPage).map((item) => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [selectedOption, setSelectedOption] = useState(3);\n  const items = Array.from({ length: 42 }, (_, index) => index + 1);\n  const options = [3, 5, 10, 15];\n\n  const lastItemOnPage = selectedPage * selectedOption;\n  const firstItemOnPage = lastItemOnPage - selectedOption;\n\n  const pageChangeHandler = (page: number, option: number) => {\n    if (page * option > items.length) {\n      setSelectedPage(1);\n      setSelectedOption(option);\n\n      return;\n    }\n\n    setSelectedPage(page);\n    setSelectedOption(option);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${Math.min(firstItemOnPage + 1, total)} - ${Math.min(lastItemOnPage, total)} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedOption}\n            onChange={(e) => {\n              pageChangeHandler(selectedPage, parseInt(e.target.value, 10));\n            }}\n          >\n            {options.map((opt) => (\n              <option\n                key={opt}\n              >\n                {opt}\n              </option>\n            ))}\n\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={selectedOption}\n        currentPage={selectedPage}\n        items={items}\n        onPageChange={setSelectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}